# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more: 
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
    -  '*'
  paths:
    include:
    - 'src/*'
    - 'test/*'

name: Release-$(Year:yy)-$(DayOfYear)-$(Rev:r)

pool:
  name: 'HSK PreProd Pool'

parameters:
  - name: deployToDev
    displayName: Deploy to dev
    default: false
    type: boolean

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  solution: '**/src/Cps.Fct.Hk.DocGenService.sln'
  project: '**/src/Cps.Fct.Hk.DocGenService/Cps.Fct.Hk.DocGenService.csproj'
  testProject: '**/test/**/*Tests.csproj'
  integrationTestProject: '**/test/**/*Tests.csproj'
  directory: .
  appName: 'Cps.Fct.Hk.DocGen'
  azureSubscription: 'df59c33f-333b-44ea-a41a-564890e7499c'
  resourceName: 'fct-cps-hsk-docgen'
  hskBuildAgentPool: 'HSK PreProd Pool'
  hskBuildAgentPoolProduction: 'HSK Production Pool'
 
stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: NuGetToolInstaller@1
      name: 'NuGetToolInstaller'
      displayName: 'NuGet tool installer'
    
    - task: NuGetCommand@2
      name: 'NuGetRestore'
      displayName: 'NuGet restore packages'
      inputs:
        command: 'restore'
        restoreSolution: '$(solution)'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: Building solution
      inputs:
        command: 'build'
        projects: '$(project)'
        arguments: '--configuration debug'

    - task: DotNetCoreCLI@2
      displayName: Run tests
      inputs:
        command: test
        projects: '$(testProject)'
        arguments: '--configuration debug'
    
    - task: DotNetCoreCLI@2
      displayName: Run integration tests
      inputs:
        command: test
        projects: '$(integrationTestProject)'
        arguments: '--configuration debug'
    
    - task: DotNetCoreCLI@2
      name: 'Publish'
      displayName: 'Publish'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '$(project)'
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/Output'
        zipAfterPublish: false
    
    - task: PublishBuildArtifacts@1
      name: 'PublishBuildArtifacts'
      displayName: 'Publish build artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'docgen-service-api'
        publishLocation: 'Container'

- stage: DevDeploy
  displayName: Deploy Dev
  dependsOn: Build
  condition: and(succeeded(), or(eq(${{ parameters.deployToDev }}, 'true'), eq(variables['Build.SourceBranch'], 'refs/heads/main')))
  jobs:
    - deployment: Deploy
      displayName: Deploy
      environment: 'Reporting-service-dev'
      pool:
        name: $(hskBuildAgentPool)
      strategy:
        runOnce:
          deploy:
            steps:
            - task: AzureFunctionApp@1
              inputs:
                azureSubscription: 'sc-hsk-preprod'
                resourceGroupName: 'rg-hsk-uma-dev'
                appType: 'functionAppLinux'
                appName: '$(resourceName)-dev'
                package: '$(Pipeline.Workspace)/docgen-service-api/Output/Cps.Fct.Hk.DocGenService'
                deploymentMethod: runFromPackage
                ConfigurationSettings: '-ApplicationName "Cps.Fct.Hk.Ui.DocGenService" ' 
                appSettings:
                      -Application__AppName "HK DocGen Service"
                      -Application__AppVersion "1.0.0"
                      -Environment "dev"
                      -WEBSITE_ENABLE_SYNC_UPDATE_SITE "true"
                      -WEBSITE_USE_PLACEHOLDER_DOTNETISOLATED "1"
                      -WEBSITES_ENABLE_APP_SERVICE_STORAGE "true"
                      -FUNCTIONS_EXTENSION_VERSION "4"
                      -FUNCTIONS_WORKER_RUNTIME "dotnet-isolated"
                    
- stage: Staging
  displayName: Deploy Staging
  dependsOn: DevDeploy
  condition: and(succeeded('DevDeploy'), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
    - deployment: Deploy
      environment: 'Reporting-service-staging'
      displayName: Deploy
      pool:
        name: $(hskBuildAgentPool)
      strategy:
        runOnce:
          deploy:
            steps:
            - task: AzureFunctionApp@1
              inputs:
                azureSubscription: 'HSK PreProd (via service principal)'
                resourceGroupName: 'rg-hsk-uma-staging'
                appType: 'functionAppLinux'
                appName: '$(resourceName)-staging'
                package: '$(Pipeline.Workspace)/docgen-service-api/Output/Cps.Fct.Hk.DocGenService'
                deploymentMethod: runFromPackage
                ConfigurationSettings: '-ApplicationName "Cps.Fct.Hk.Ui.DocGenService" ' 
                appSettings:
                      -Application__AppName "HK DocGen Service"
                      -Application__AppVersion "1.0.0"
                      -Environment "staging"
                      -WEBSITE_ENABLE_SYNC_UPDATE_SITE "true"
                      -WEBSITE_USE_PLACEHOLDER_DOTNETISOLATED "1"
                      -WEBSITES_ENABLE_APP_SERVICE_STORAGE "true"
                      -FUNCTIONS_EXTENSION_VERSION "4"
                      -FUNCTIONS_WORKER_RUNTIME "dotnet-isolated"

- stage: Production
  displayName: Deploy Production
  dependsOn: Staging
  condition: and(succeeded('Staging'), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
    - deployment: Deploy
      environment: 'Reporting-service-production'
      displayName: Deploy
      pool:
        name: $(hskBuildAgentPoolProduction)
      strategy:
        runOnce:
          deploy:
            steps:
            - task: AzureFunctionApp@1
              inputs:
                azureSubscription: 'HSK Prod (via service principal)'
                resourceGroupName: 'rg-hsk-uma-prod'
                appType: 'functionAppLinux'
                appName: '$(resourceName)-Production'
                package: '$(Pipeline.Workspace)/docgen-service-api/Output/Cps.Fct.Hk.DocGenService'
                deploymentMethod: runFromPackage
                ConfigurationSettings: '-ApplicationName "Cps.Fct.Hk.Ui.DocGenService" ' 
                appSettings:
                      -Application__AppName "HK DocGen Service"
                      -Application__AppVersion "1.0.0"
                      -Environment "Production"
                      -WEBSITE_ENABLE_SYNC_UPDATE_SITE "true"
                      -WEBSITE_USE_PLACEHOLDER_DOTNETISOLATED "1"
                      -WEBSITES_ENABLE_APP_SERVICE_STORAGE "true"
                      -FUNCTIONS_EXTENSION_VERSION "4"
                      -FUNCTIONS_WORKER_RUNTIME "dotnet-isolated"
